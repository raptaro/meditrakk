# Generated by Django 5.1.5 on 2025-10-30 05:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('appointment', '0005_alter_appointment_scheduled_by'),
        ('patient', '0016_patient_role_id'),
        ('user', '0013_alter_useraccount_id'),
    ]

    operations = [
        migrations.AlterField(
            model_name='payment',
            name='appointment',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='appointment.appointment'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='paymaya_reference_id',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='payment',
            name='payment_method',
            field=models.CharField(choices=[('PayMaya', 'PayMaya'), ('Gcash', 'Gcash')], max_length=20),
        ),
        migrations.CreateModel(
            name='AppointmentRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_datetime', models.DateTimeField(db_index=True)),
                ('reason', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending_payment', 'Pending Payment'), ('paid', 'Paid (awaiting reservation finalization)'), ('reserved', 'Reserved (paid, awaiting secretary confirmation)'), ('paid_unavailable', 'Paid - Slot Unavailable'), ('expired', 'Expired'), ('cancelled', 'Cancelled'), ('scheduled', 'Scheduled')], default='pending_payment', max_length=30)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_requests', to='user.doctor')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_requests', to='patient.patient')),
            ],
        ),
        migrations.AddField(
            model_name='payment',
            name='appointment_request',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='appointment.appointmentrequest'),
        ),
        migrations.CreateModel(
            name='AppointmentReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_datetime', models.DateTimeField(db_index=True)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('appointment_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='reservation', to='appointment.appointmentrequest')),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservations', to='user.doctor')),
            ],
            options={
                'ordering': ['expires_at'],
                'constraints': [models.UniqueConstraint(fields=('doctor', 'appointment_datetime'), name='unique_reserved_slot_per_doctor')],
            },
        ),
    ]
